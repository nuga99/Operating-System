# REV02 Thu Dec  6 10:14:44 WIB 2018
# START Wed Dec  5 19:35:40 WIB 2018

CC            = gcc
LDFLAGS       = 
CFLAGS        =
CPPFLAGS      =
OUTPUT_OPTION = -o $@
DEPDIR        = .d
DEPFLAGS      = -MT $@ -MMD -MP -MF $(DEPDIR)/$*.Td
COMPILE       = $(CC) $(DEPFLAGS) $(CFLAGS) $(CPPFLAGS) -c
POSTCOMPILE   = @mv -f $(DEPDIR)/$*.Td $(DEPDIR)/$*.d && touch $@
SRCS          = $(wildcard *.c)
OBJ           = $(SRCS:.c=.o)
PROGS         = $(SRCS:.c=  )
$(shell mkdir -p $(DEPDIR) >/dev/null)

all: main1 main2 main3 main4

main1: main1.o sub1.o sub2.o sub3.o
	$(CC) $(OUTPUT_OPTION) $^ $(LDFLAGS)
   
main2: main2.o sub1.o sub2.o
	$(CC) $(OUTPUT_OPTION) $^ $(LDFLAGS)
   
main3: main3.o sub1.o sub3.o
	$(CC) $(OUTPUT_OPTION) $^ $(LDFLAGS)
   
main4: main4.o sub2.o sub3.o
	$(CC) $(OUTPUT_OPTION) $^ $(LDFLAGS)

%.o : %.c
%.o : %.c $(DEPDIR)/%.d
	$(COMPILE) $(OUTPUT_OPTION) -c $<
	$(POSTCOMPILE)

$(DEPDIR)/%.d: ;
.PRECIOUS: $(DEPDIR)/%.d

include $(wildcard $(patsubst %,$(DEPDIR)/%.d,$(basename $(SRCS))))

.phony: clean all

clean:
	rm -rf $(OBJ) $(DEPDIR) $(PROGS)

